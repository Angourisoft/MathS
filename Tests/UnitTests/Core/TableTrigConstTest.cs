/*
 * This file was auto-generated by TestGenerator
 * Do not modify it; modify TestGenerator.java and rerun it instead.
 */

/*
 * It's super important to test all following cases because they test replacements for Trigonometric functions
 * so if one is wrong your result might be wrong at all
 */


using AngouriMath;
using System;
using System.Linq;
using Xunit;
using Xunit.Abstractions;

namespace UnitTests.Core
{
    public class TestTrigTableConsts
    {
        // For MemberData to show up as individual test cases, all arguments must be serializable:
        // https://github.com/xunit/xunit/issues/1473#issuecomment-333226539
        public static readonly System.Collections.Generic.IEnumerable<object[]> TrigTestData =
            new[] { nameof(MathS.Sin), nameof(MathS.Cos), nameof(MathS.Tan), nameof(MathS.Cotan) }
            .SelectMany(_ => Enumerable.Range(1, 29), (func, i) => new object[] { func, i });
        [Theory]
        [MemberData(nameof(TrigTestData))]
        public void TrigTest(string trigFunc, int twoPiOver)
        {
            var toSimplify =
                (Entity?)typeof(MathS).GetMethod(trigFunc)?.Invoke(null, new object[] { 2 * MathS.pi / twoPiOver })
                ?? throw new ArgumentException($"{trigFunc} not found.", nameof(trigFunc));
            var expected = toSimplify.Eval();
            var real = toSimplify.Simplify().Eval();
            Assert.Equal(expected, real);
        }
    }
}
